export const conditions = {
  hover: '&:hover, &[data-hover]',
  focus: '&:focus, &[data-focus]',
  focusWithin: '&:focus-within',
  focusVisible: '&:focus-visible, &[data-focus-visible]',
  disabled: '&:disabled, &[data-disabled]',
  active: '&:active, &[data-active]',
  visited: '&:visited',
  target: '&:target',
  readOnly: '&:read-only, &[data-read-only]',
  readWrite: '&:read-write',
  empty: '&:empty, &[data-empty]',
  checked: '&:checked, &[data-checked]',
  enabled: '&:enabled',
  expanded: '&[aria-expanded=true], &[data-expanded]',
  highlighted: '&[data-highlighted]',

  before: '&::before',
  after: '&::after',
  firstLetter: '&::first-letter',
  firstLine: '&::first-line',
  marker: '&::marker',
  selection: '&::selection',
  file: '&::file-selector-button',
  backdrop: '&::backdrop',

  first: '&:first-child',
  last: '&:last-child',
  only: '&:only-child',
  even: '&:even',
  odd: '&:odd',

  firstOfType: '&:first-of-type',
  lastOfType: '&:last-of-type',
  onlyOfType: '&:only-of-type',

  peerFocus: '.peer:where(:focus, [data-focus]) ~ &',
  peerHover: '.peer:where(:hover, [data-hover]) ~ &',
  peerActive: '.peer:where(:active, [data-active]) ~ &',
  peerFocusWithin: '.peer:focus-within ~ &',
  peerFocusVisible: '.peer:where(:focus-visible, [data-focus-visible]) ~ &',
  peerDisabled: '.peer:where(:disabled, [disabled], [data-disabled]) ~ &',
  peerChecked: '.peer:where(:checked, [data-checked], [aria-checked=true]) ~ &',
  peerInvalid: '.peer:where(:invalid, [data-invalid], [aria-invalid=true]) ~ &',
  peerExpanded: '.peer:where([aria-expanded=true], [data-expanded]) ~ &',
  peerPlaceholderShown: '.peer:placeholder-shown ~ &',

  groupFocus: '.group:where(:focus, [data-focus]) &',
  groupHover: '.group:where(:hover, [data-hover]) &',
  groupActive: '.group:where(:active, [data-active]) &',
  groupFocusWithin: '.group:focus-within &',
  groupFocusVisible: '.group:where(:focus-visible, [data-focus-visible]) &',
  groupDisabled: '.group:where(:disabled, [disabled], [data-disabled]) &',
  groupChecked: '.group:where(:checked, [data-checked], [aria-checked=true]) &',
  groupExpanded: '.group:where([aria-expanded=true], [data-expanded]) &',
  groupInvalid: '.group:invalid &',

  indeterminate: '&:indeterminate, &[data-indeterminate], &[aria-checked=mixed]',
  required: '&:required',
  valid: '&:valid, &[data-valid]',
  invalid: '&:invalid, &[data-invalid]',
  autofill: '&:autofill',
  inRange: '&:in-range',
  outOfRange: '&:out-of-range',
  placeholder: '&:placeholder',
  placeholderShown: '&:placeholder-shown',
  pressed: '&[aria-pressed=true], &[data-pressed]',
  selected: '&[aria-selected=true], &[data-selected]',

  default: '&:default',
  optional: '&:optional',
  open: '&[open]',
  fullscreen: '&:fullscreen',
  loading: '&[data-loading], &[aria-busy=true]',

  currentPage: '&[aria-current=page]',
  currentStep: '&[aria-current=step]',

  motionReduce: '@media (prefers-reduced-motion: reduce)',
  motionSafe: '@media (prefers-reduced-motion: no-preference)',

  print: '@media print',

  landscape: '@media (orientation: landscape)',
  portrait: '@media (orientation: portrait)',

  dark: '.dark &',

  highConstrast: '@media (forced-colors: active)',
  lessContrast: '@media (prefers-contrast: less)',
  moreContrast: '@media (prefers-contrast: more)',

  ltr: '[dir=ltr] &',
  rtl: '[dir=rtl] &',
}
